<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rabbit.dao.TTestSuiteUiLogMapper">
  <resultMap id="BaseResultMap" type="com.rabbit.model.TTestSuiteUiLog">
    <!--@mbg.generated-->
    <!--@Table t_test_suite_ui_log-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="plan_log_id" jdbcType="BIGINT" property="planLogId" />
    <result column="suite_id" jdbcType="BIGINT" property="suiteId" />
    <result column="suite_name" jdbcType="VARCHAR" property="suiteName" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="case_total_count" jdbcType="INTEGER" property="caseTotalCount" />
    <result column="case_succ_count" jdbcType="INTEGER" property="caseSuccCount" />
    <result column="case_fail_count" jdbcType="INTEGER" property="caseFailCount" />
    <result column="case_skip_count" jdbcType="INTEGER" property="caseSkipCount" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, plan_log_id, suite_id, suite_name, project_id, `status`, case_total_count, case_succ_count, 
    case_fail_count, case_skip_count, end_time, remark, create_by, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from t_test_suite_ui_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from t_test_suite_ui_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.rabbit.model.TTestSuiteUiLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_test_suite_ui_log (plan_log_id, suite_id, suite_name, 
      project_id, `status`, case_total_count, 
      case_succ_count, case_fail_count, case_skip_count, 
      end_time, remark, create_by, 
      create_time)
    values (#{planLogId,jdbcType=BIGINT}, #{suiteId,jdbcType=BIGINT}, #{suiteName,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{caseTotalCount,jdbcType=INTEGER}, 
      #{caseSuccCount,jdbcType=INTEGER}, #{caseFailCount,jdbcType=INTEGER}, #{caseSkipCount,jdbcType=INTEGER}, 
      #{endTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.rabbit.model.TTestSuiteUiLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_test_suite_ui_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planLogId != null">
        plan_log_id,
      </if>
      <if test="suiteId != null">
        suite_id,
      </if>
      <if test="suiteName != null and suiteName != ''">
        suite_name,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="caseTotalCount != null">
        case_total_count,
      </if>
      <if test="caseSuccCount != null">
        case_succ_count,
      </if>
      <if test="caseFailCount != null">
        case_fail_count,
      </if>
      <if test="caseSkipCount != null">
        case_skip_count,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="remark != null and remark != ''">
        remark,
      </if>
      <if test="createBy != null and createBy != ''">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planLogId != null">
        #{planLogId,jdbcType=BIGINT},
      </if>
      <if test="suiteId != null">
        #{suiteId,jdbcType=BIGINT},
      </if>
      <if test="suiteName != null and suiteName != ''">
        #{suiteName,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="caseTotalCount != null">
        #{caseTotalCount,jdbcType=INTEGER},
      </if>
      <if test="caseSuccCount != null">
        #{caseSuccCount,jdbcType=INTEGER},
      </if>
      <if test="caseFailCount != null">
        #{caseFailCount,jdbcType=INTEGER},
      </if>
      <if test="caseSkipCount != null">
        #{caseSkipCount,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null and remark != ''">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null and createBy != ''">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rabbit.model.TTestSuiteUiLog">
    <!--@mbg.generated-->
    update t_test_suite_ui_log
    <set>
      <if test="planLogId != null">
        plan_log_id = #{planLogId,jdbcType=BIGINT},
      </if>
      <if test="suiteId != null">
        suite_id = #{suiteId,jdbcType=BIGINT},
      </if>
      <if test="suiteName != null and suiteName != ''">
        suite_name = #{suiteName,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="caseTotalCount != null">
        case_total_count = #{caseTotalCount,jdbcType=INTEGER},
      </if>
      <if test="caseSuccCount != null">
        case_succ_count = #{caseSuccCount,jdbcType=INTEGER},
      </if>
      <if test="caseFailCount != null">
        case_fail_count = #{caseFailCount,jdbcType=INTEGER},
      </if>
      <if test="caseSkipCount != null">
        case_skip_count = #{caseSkipCount,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null and createBy != ''">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rabbit.model.TTestSuiteUiLog">
    <!--@mbg.generated-->
    update t_test_suite_ui_log
    set plan_log_id = #{planLogId,jdbcType=BIGINT},
      suite_id = #{suiteId,jdbcType=BIGINT},
      suite_name = #{suiteName,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=INTEGER},
      case_total_count = #{caseTotalCount,jdbcType=INTEGER},
      case_succ_count = #{caseSuccCount,jdbcType=INTEGER},
      case_fail_count = #{caseFailCount,jdbcType=INTEGER},
      case_skip_count = #{caseSkipCount,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--auto generated by MybatisCodeHelper on 2019-08-27-->
  <select id="findByPlanIdCount" resultMap="BaseResultMap">
    SELECT
    plan_log_id,
    SUM(case_total_count) AS case_total_count,
    SUM(case_succ_count) AS case_succ_count,
    SUM(case_fail_count) AS case_fail_count,
    SUM(case_skip_count) AS case_skip_count,
    MAX(end_time) AS end_time,
    MIN(create_time) AS create_time
    FROM t_test_suite_ui_log
    WHERE plan_log_id=#{planId,jdbcType=BIGINT}
    GROUP BY plan_log_id
  </select>

<!--auto generated by MybatisCodeHelper on 2019-11-29-->
  <delete id="deleteByPlanLogId">
        delete from t_test_suite_ui_log
        where plan_log_id=#{planLogId,jdbcType=BIGINT}
    </delete>

<!--auto generated by MybatisCodeHelper on 2019-11-30-->
  <select id="countByPlanLogIdAndStatus" resultType="java.lang.Long">
        select count(1)
        from t_test_suite_ui_log
        where plan_log_id=#{planLogId,jdbcType=BIGINT} and `status`=#{status,jdbcType=INTEGER}
    </select>
</mapper>