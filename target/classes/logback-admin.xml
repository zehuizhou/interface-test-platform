<?xml version='1.0' encoding='UTF-8'?>

<!-- 日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出 -->
<!-- scan:当此属性设置为true时，配置文档如果发生改变，将会被重新加载，默认值为true -->
<!-- scanPeriod:设置监测配置文档是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。
                 当scan为true时，此属性生效。默认的时间间隔为1分钟。 -->
<!-- debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="10 seconds">
    <contextName>logback</contextName>
    <springProperty name="logFile" source="log.file"/>
    <springProperty name="rootlevel" source="log.level.root"/>
    <springProperty name="mylevel" source="log.level.my"/>
    <springProperty name="maxFileSize" source="log.maxsize"/>
    <!--控制台日志输出格式-->
    <!--clsss:表示输出策略-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--<encoder> 表示对日志进行编码：-->
            <!--%d{HH: mm:ss.SSS}——日志输出时间-->
            <!--%thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用-->
            <!--%-5level——日志级别，并且使用5个字符靠左对齐-->
            <!--%logger{36}——日志输出者的名字-->
            <!--%msg——日志消息-->
            <!--%n——平台的换行符-->
            <pattern>%d [%thread] %-5level %logger{50} -[%file:%line]- %msg%n
            </pattern>
            <!--<charset>UTF-8</charset>-->
        </encoder>
    </appender>

    <appender name="adminLog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFile}</file>
        <encoder>
            <pattern>%d [%thread] %-5level -[%file:%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
            <fileNamePattern>${logFile}.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!--只保留最近30天的日志-->
            <maxHistory>30</maxHistory>
            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
    </appender>

    <appender name="errorLog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFile}.error</file>
        <encoder>
            <pattern>%d [%thread] %-5level %logger{36} -[%file:%line]- %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logFile}.error.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <!--只保留最近30天的日志-->
            <maxHistory>30</maxHistory>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
        <!-- 此日志文档只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="sqlLog"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logFile}.sql</file>
        <encoder>
            <pattern>%d [%thread] %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logFile}.sql.%d{yyyy-MM-dd}.%i</fileNamePattern>
            <maxFileSize>${maxFileSize}</maxFileSize>
        </rollingPolicy>
    </appender>

    <logger name="com.rabbit" level="${mylevel}" additivity="true">
        <appender-ref ref="adminLog"/>
    </logger>

    <logger name="com.rabbit.dao" level="DEBUG" additivity="true">
        <appender-ref ref="sqlLog"/>
    </logger>

    <logger name="org.springframework.scheduling.quartz" level="error" additivity="true">
        <appender-ref ref="adminLog"/>
    </logger>

    <root level="${rootlevel}">
        <appender-ref ref="console"/>
        <appender-ref ref="errorLog"/>
    </root>

</configuration>
